/************** TABLAS PARA EJERCICIOS ONE-TO-ONE ***************/
CREATE SEQUENCE usuarios_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE datos_usuarios_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE datos_articulos_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE datos_usuarios(
   id INT GENERATED BY DEFAULT AS SEQUENCE datos_usuarios_id_seq,
   biografia CLOB,
   fecha_registro DATE,PRIMARY KEY(id)
);

CREATE TABLE datos_articulos(
   id INT GENERATED BY DEFAULT AS SEQUENCE datos_articulos_id_seq,
   observaciones CLOB,
   PRIMARY KEY(id)   
);

CREATE TABLE usuarios(
   id INT GENERATED BY DEFAULT AS SEQUENCE usuarios_id_seq,   
   datos_autor_id INT,
   nombre VARCHAR(600),
   email VARCHAR(500),
   password VARCHAR(500),
   rol VARCHAR(500),
   activo BOOLEAN,
   PRIMARY KEY(id),
   FOREIGN KEY(datos_autor_id) REFERENCES datos_usuarios
);


/************** TABLAS PARA EJERCICIO ONE-TO-MANY ***************/
CREATE SEQUENCE articulo_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE comentario_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE articulos(
   id INT GENERATED BY DEFAULT AS SEQUENCE articulo_id_seq,
   usuario_id INT, 
   datos_articulo_id INT,
   titulo VARCHAR(500), 
   contenido CLOB, 
   fecha_creacion DATE, 
   PRIMARY KEY(id), 
   FOREIGN KEY(usuario_id) REFERENCES usuarios,
   FOREIGN KEY(datos_articulo_id) REFERENCES datos_articulos
);

CREATE TABLE comentarios(
   id INT GENERATED BY DEFAULT AS SEQUENCE comentario_id_seq,
   articulo_id INT,
   comentario CLOB,
   comentarista VARCHAR(500),
   fecha_creacion DATE,
   PRIMARY KEY (id),
   FOREIGN KEY(articulo_id) REFERENCES articulos
);

/************** TABLAS PARA EJERCICIO MANY-TO-MANY ***************/
CREATE SEQUENCE categoria_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE categorias(
   id INT GENERATED BY DEFAULT AS SEQUENCE categoria_id_seq,
   nombre VARCHAR(200),
   PRIMARY KEY(id)
);

CREATE TABLE categorias_articulos(
   categoria_id INT ,
   articulo_id INT,
   PRIMARY KEY(categoria_id, articulo_id),
   FOREIGN KEY(categoria_id) REFERENCES categorias,
   FOREIGN KEY(articulo_id) REFERENCES articulos
);

CREATE SEQUENCE departamento_id_seq START WITH 1 INCREMENT BY 1;
CREATE TABLE departamentos(
   id INT GENERATED BY DEFAULT AS SEQUENCE departamento_id_seq ,
   nombre VARCHAR(200),
   PRIMARY KEY(id)
);

CREATE TABLE departamentos_usuarios(
   departamento_id INT,
   usuario_id INT,
   PRIMARY KEY(departamento_id, usuario_id),
   FOREIGN KEY(departamento_id) REFERENCES departamentos,
   FOREIGN KEY(usuario_id) REFERENCES usuarios
);



/************ TABLAS PARA EJEMPLOS @Embedded y @ElementCollection *********/
CREATE SEQUENCE domicilios_id_seq START WITH 1 INCREMENT BY 1;
CREATE TABLE domicilios(
   id INT GENERATED BY DEFAULT AS SEQUENCE domicilios_id_seq,
   usuario_id INT,
   calle VARCHAR(300),
   numero VARCHAR(100),
   colonia VARCHAR(300),
   ciudad VARCHAR(300),
   PRIMARY KEY(id),
   FOREIGN KEY(usuario_id) REFERENCES usuarios        
);

CREATE SEQUENCE ratings_id_seq START WITH 1 INCREMENT BY 1;
CREATE TABLE ratings(
    id INT GENERATED BY DEFAULT AS SEQUENCE ratings_id_seq,
    rating INT,
    articulo_id INT,
    PRIMARY KEY(id),
    FOREIGN KEY(articulo_id)  REFERENCES articulos
); 

CREATE SEQUENCE telefonos_id_seq START WITH 1 INCREMENT BY 1;
CREATE TABLE telefonos(
  id INT GENERATED BY DEFAULT AS SEQUENCE telefonos_id_seq,
  usuario_id INT,
  telefono VARCHAR(300),
  PRIMARY KEY(id),
  FOREIGN KEY(usuario_id) REFERENCES usuarios
);

CREATE SEQUENCE emails_adicionales_id_seq START WITH 1 INCREMENT BY 1; 
CREATE TABLE emails_adicionales(
  id INT GENERATED BY DEFAULT AS SEQUENCE emails_adicionales_id_seq,
  usuario_id INT,
  email VARCHAR(300),
  PRIMARY KEY(id),
  FOREIGN KEY(usuario_id) REFERENCES usuarios
);

/************* TABLAS DE EJEMPLO PARA LLAVES COMPUESTAS **********/

CREATE TABLE ventas(
  orden INT,
  codigo_barras VARCHAR(300),
  nombre_producto VARCHAR(300),
  cantidad INT,
  PRIMARY KEY(orden, codigo_barras)
);


CREATE TABLE inscripciones(
  matricula VARCHAR(300),
  curso VARCHAR(300),
  fecha_inscripcion DATE,
  PRIMARY KEY(matricula,curso)
);

